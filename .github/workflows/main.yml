name: Delete Old Branches

on:
  workflow_dispatch:

jobs:
  delete_old_branches:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Fetch all branches
      run: git fetch --prune --tags

    - name: Calculate one month ago date
      id: calculate_date
      run: |
        current_date=$(date -u "+%Y-%m-%d")
        one_month_ago_date=$(date -d "-1 month" "+%Y-%m-%d" 2>/dev/null || date -j -v -1m "+%Y-%m-%d" 2>/dev/null)
        echo "Calculated one month ago date: $one_month_ago_date"
        echo "ONE_MONTH_AGO_DATE=$one_month_ago_date" >> $GITHUB_ENV

    - name: List branches for debugging
      run: |
        git branch -r
        echo "Threshold date: $(date -d @$one_month_ago_date "+%Y-%m-%d")"

    - name: List branches with last commit date
      id: list_branches
      run: |
        branches_to_delete=()
        branches_created_after_threshold=()

        # Loop through all remote branches
        for branch in $(git branch -r | grep -v HEAD | grep -v origin/development | grep -v origin/master | grep -v origin/main | grep -v origin/production | grep -v origin/staging | sed /\*/d); do
            last_commit_date=$(git log -1 --format="%cd" --date=format:%Y-%m-%d $branch)
            
            if [ "$one_month_ago_date" \> "$last_commit_date" ]; then
                branches_to_delete+=("$branch")
            else
                branches_created_after_threshold+=("$branch")
            fi
        done

        echo "Branches to delete: ${branches_to_delete[@]}"
        echo "Branches created after threshold date: ${branches_created_after_threshold[@]}"
    
    - name: Run delete branches script
      run: |
        for branch in "${branches_to_delete[@]}"; do
            echo "Deleting branch: $branch"
            remote_branch=$(echo ${branch} | sed 's#origin/##' )
            # Uncomment the next line to delete branches
            # git push origin --delete $remote_branch
        done
